file_name: snake_case
function_name: PascalCase
arg_name: camelCase
struct_name: PascalCase
field_name: PascalCase

type_mapping:
  int: int64
  double: double
  boolean: bool
  string: string
  "int[]": "[]int64"
  "double[]": "[]double"
  "boolean[]": "[]bool"
  "string[]": "[]string"

acronyms: ["iOS", "API", "URL"]

templates:
  - pattern: "registry.md"
    filter: "."
    application_mode: single
  - pattern: "**/attribute_group.md"
    filter: semconv_grouped_attributes
    application_mode: each
  - pattern: "**/attribute_groups.md"
    filter: semconv_grouped_attributes
    application_mode: single
  - pattern: "**/event.md"
    filter: >
      semconv_signal("event"; {})
      | group_by(.root_namespace)
      | map({ root_namespace: .[0].root_namespace, events: . | sort_by(.name) })
    application_mode: each
  - pattern: "**/events.md"
    filter: >
      semconv_signal("event"; {})
      | group_by(.root_namespace)
      | map({ root_namespace: .[0].root_namespace, events: . | sort_by(.name) })
    application_mode: single
  - pattern: "**/metric.md"
    filter: semconv_grouped_metrics
    application_mode: each
  - pattern: "**/metrics.md"
    filter: semconv_grouped_metrics
    application_mode: single
  - pattern: "**/resource.md"
    filter: > 
      semconv_signal("resource"; {}) 
      | group_by(.root_namespace)
      | map({ root_namespace: .[0].root_namespace, resources: . | sort_by(.id) })
    application_mode: each
  - pattern: "**/resources.md"
    filter: >
      semconv_signal("resource"; {}) 
      | group_by(.root_namespace)
      | map({ root_namespace: .[0].root_namespace, resources: . | sort_by(.id) })
    application_mode: single
  - pattern: "**/span.md"
    filter: >
      semconv_signal("span"; {}) 
      | group_by(.root_namespace)
      | map({ root_namespace: .[0].root_namespace, spans: . | sort_by(.id) })
    application_mode: each
  - pattern: "**/spans.md"
    filter: >
      semconv_signal("span"; {}) 
      | group_by(.root_namespace)
      | map({ root_namespace: .[0].root_namespace, spans: . | sort_by(.id) })
    application_mode: single